// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	dto "github.com/veleton777/booking_api/internal/dto"
)

// BookingSvc is an autogenerated mock type for the BookingSvc type
type BookingSvc struct {
	mock.Mock
}

// Booking provides a mock function with given fields: ctx, req
func (_m *BookingSvc) Booking(ctx context.Context, req dto.BookingReq) error {
	ret := _m.Called(ctx, req)

	if len(ret) == 0 {
		panic("no return value specified for Booking")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, dto.BookingReq) error); ok {
		r0 = rf(ctx, req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewBookingSvc creates a new instance of BookingSvc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBookingSvc(t interface {
	mock.TestingT
	Cleanup(func())
}) *BookingSvc {
	mock := &BookingSvc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
